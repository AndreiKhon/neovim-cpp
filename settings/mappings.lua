local map = vim.keymap.set
-- File manager
map('n', '<Leader>e', require('mini.files').open, { desc = 'File manager' })
-- Buffer manipulation
map('n', '<Tab>', '<cmd>bnext<CR>', {})
map('n', '<S-Tab>', '<cmd>bprev<CR>', {})
map('n', '<Leader>q', '<cmd>bdelete<CR>', { desc = 'Close current buffer' })
map('n', '<C-//>', '<cmd>noh<CR>', { desc = 'Clear highlight' })
-- Mini map
map('n', '<Leader>mc', require('mini.map').close, { desc = 'Close' })
map('n', '<Leader>mf', require('mini.map').toggle_focus, { desc = 'Focus' })
map('n', '<Leader>mo', require('mini.map').open, { desc = 'Open' })
map('n', '<Leader>mr', require('mini.map').refresh, { desc = 'Refresh' })
map('n', '<Leader>ms', require('mini.map').toggle_side, { desc = 'Toggle side' })
map('n', '<Leader>mt', require('mini.map').toggle, { desc = 'Toggle' })
-- Lsp
map('n', '<Leader>lf', vim.lsp.buf.format, { desc = 'Format file' })
map('n', '<leader>ld', vim.diagnostic.setloclist, { desc = 'Diagnostic loclist' })
-- Dap
map('n', '<F5>', require('dap').continue, { desc = 'Continue' })
map('n', '<F8>', require('dap').step_over, { desc = 'Step over' })
map('n', '<F9>', require('dap').step_into, { desc = 'Step into' })
map('n', '<F10>', require('dap').step_out, { desc = 'Step out' })
map('n', '<Leader>db', require('dap').toggle_breakpoint, { desc = 'Toggle breakpoint' })
map('n', '<Leader>dB', require('dap').set_breakpoint, { desc = 'Set breakpoint' })
map('n', '<Leader>dm', function()
  require('dap').set_breakpoint(nil, nil, vim.fn.input('Log point message: '))
end, { desc = 'Set breakpoint with log point message' })
map('n', '<Leader>dr', require('dap').repl.open, { desc = 'Repl open' })
map('n', '<Leader>dl', require('dap').run_last, { desc = 'Run last' })
map({ 'n', 'v' }, '<Leader>dh', require('dap.ui.widgets').hover, { desc = 'Widgets hover' })
map({ 'n', 'v' }, '<Leader>dp', require('dap.ui.widgets').preview, { desc = 'Widgets preview' })
map('n', '<Leader>df', function()
  local widgets = require('dap.ui.widgets')
  widgets.centered_float(widgets.frames)
end, { desc = 'Widgets centered float frames' })
map('n', '<Leader>ds', function()
  local widgets = require('dap.ui.widgets')
  widgets.centered_float(widgets.scopes)
end, { desc = 'Widget centered float scopes' })
